<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        acKE/wFzaFp6ejXMGwAAAABJRU5ErkJggg==
</value>
  </data>
</root>